import readline from 'readline'
import { 
  default: makeWASocket, 
  useSingleFileAuthState, 
  DisconnectReason,
  fetchLatestBaileysVersion 
} from '@adiwajshing/baileys'

const SESSION_FILE = './session.json'
const { state, saveState } = useSingleFileAuthState(SESSION_FILE)

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
})

async function startSock(showQR, showCode8) {
  const { version } = await fetchLatestBaileysVersion()
  const sock = makeWASocket({
    version,
    printQRInTerminal: false,
    auth: state
  })

  sock.ev.on('creds.update', saveState)

  sock.ev.on('connection.update', (update) => {
    const { connection, lastDisconnect, qr, legacy } = update

    if (showQR && qr) {
      console.log('\nEscanea este código QR con WhatsApp:\n', qr)
    }

    if (showCode8 && legacy?.refreshed) {
      console.log('\nCódigo numérico de 8 dígitos:', legacy.refreshed)
    }

    if (connection === 'close') {
      const shouldReconnect = (lastDisconnect.error)?.output?.statusCode !== DisconnectReason.loggedOut
      console.log('Conexión cerrada, reconectando:', shouldReconnect)
      if (shouldReconnect) {
        startSock(showQR, showCode8)
      } else {
        console.log('La sesión fue cerrada (logout). Borra el archivo session.json para iniciar de nuevo.')
      }
    }

    if (connection === 'open') {
      console.log('Conectado correctamente a WhatsApp.')
    }
  })

  return sock
}

rl.question(`¿Qué método quieres usar para iniciar sesión?\n
1 - Código QR\n
2 - Código numérico de 8 dígitos\n
Escoge 1 o 2: `, (answer) => {
  if (answer === '1') {
    startSock(true, false)
  } else if (answer === '2') {
    startSock(false, true)
  } else {
    console.log('Opción inválida, por favor ejecuta de nuevo y escoge 1 o 2.')
    process.exit(1)
  }
  rl.close()
})